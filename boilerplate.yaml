openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0
  license:
    name: MIT
    url: https://example.com/license
servers:
  - url: https://example.com
    description: Local server
paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: User registered successfully
        '400':
          description: Bad request

  /auth/login:
    post:
      summary: Login a user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Invalid credentials

  /auth/social/{provider}:
    get:
      summary: Social authentication
      operationId: socialAuth
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [google, facebook, twitter]
      responses:
        '200':
          description: Social authentication success
        '400':
          description: Social authentication failed

  /auth/magic-link:
    post:
      summary: Send magic link
      operationId: sendMagicLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Magic link sent
        '400':
          description: Bad request

  /auth/magic-link/verify:
    post:
      summary: Verify magic link
      operationId: verifyMagicLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Magic link verified
        '400':
          description: Bad request

  /auth/change-password:
    post:
      summary: Change user password
      operationId: changePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  # Payment methods and responses
  /payments/stripe:
    post:
      summary: Process payment via Stripe
      operationId: processStripePayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                currency:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Payment successful
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /payments/flutterwave:
    post:
      summary: Process payment via Flutterwave
      operationId: processFlutterwavePayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                currency:
                  type: string
                tx_ref:
                  type: string
                redirect_url:
                  type: string
                payment_type:
                  type: string
      responses:
        '200':
          description: Payment successful
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /payments/lemonsqueezy:
    post:
      summary: Process payment via LemonSqueezy
      operationId: processLemonSqueezyPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                currency:
                  type: string
                reference:
                  type: string
      responses:
        '200':
          description: Payment successful
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  # Content edit details for the application and the API
  /content/edit:
    put:
      summary: Edit content
      operationId: editContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contentId:
                  type: string
                newContent:
                  type: string
      responses:
        '200':
          description: Content edited successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /content:
    post:
      summary: Create content
      operationId: createContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
      responses:
        '201':
          description: Content created successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized

    get:
      summary: Get all content
      operationId: getAllContent
      responses:
        '200':
          description: Content retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    body:
                      type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /content/{contentId}:
    get:
      summary: Get content by ID
      operationId: getContentById
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Content retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  body:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Content not found
  # Chart data endpoints
  /chart:
    get:
      summary: Get chart data
      operationId: getChartData
      responses:
        '200':
          description: Chart data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chartData:
                    type: array
                    items:
                      type: object
                      properties:
                        x:
                          type: number
                        y:
                          type: number
        '400':
          description: Bad request
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

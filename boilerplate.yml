openapi: 3.0.0
info:
  title: Invite Link API
  description: API for generating invite links
  version: 1.0.0

servers:
  - url: https://www.example.com/api/v1
    description: Production server

paths:
  /organisations/{orgId}/invite:
    post:
      summary: Generate an invite link
      description: Creates an invite link for a user
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  description: User email
      responses:
        200:
          description: Invite link generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    description: Invite link
                  status:
                    type: boolean
                  expirationDate:
                    type: string
                    description: when the invitation will expire
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
        401:
          description: Unauthorized access to invite a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        403:
          description: Don't have the permission to add a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  
# contact form
  /organisations/{orgId}/contact:
    post:
      summary: contact an organisations
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: janedoe@domain.com
                name:
                  type: string
                  example: Jane Doe
                message:
                  type: string
      responses:
        201:
          description: Contact form submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Details sent successfully
                  status:
                    type: boolean
        400:
          description: Request body missing a required field, or contains an invalid data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        404:
          description: The organisation you're trying to contact does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

# dashboard
  /dashboard:
    get:
      summary: Fetch dashboard data
      responses:
        200:
          description: get an authenticated user dashboard data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardResponse"
        401:
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        status:
          type: boolean
          example: false
    DashboardResponse:
      type: object
      properties:
        status:
          type: boolean
        user:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
            photo_url:
              type: string
            verified:
              type: boolean
        organisations:
          description: organisations the user belongs to
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        active_organisation:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
        notifications:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              is_read:
                type: boolean
                example: false
        invitations:
          type: array
          items:
            type: object
            properties:
              inviter:
                type: object
              organisation:
                type: object
              expirationDate:
                type: string
              status:
                type: string
                enum:
                  - pending
                  - accepted
                  - denied
                  - revoked
                description: the invitation status

          

              
              

